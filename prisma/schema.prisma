generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String      @id @default(cuid())
  name          String?
  email         String?     @unique
  emailVerified DateTime?
  image         String?
  subscribed    Boolean     @default(false)
  discoverable  Boolean     @default(false)
  accounts      Account[]
  sessions      Session[]
  userAgents    agents[]    @relation("uagent")
  aichat        aichats[]    @relation("ai")
  guestbook     guestbook[] @relation("guest")
  messages      message[]   @relation("post")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model guestbook {
  id         String   @id @default(cuid())
  email      String
  body       String
  userId     String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  created_by User     @relation("guest", fields: [userId], references: [id])
}

model message {
  id         String   @id @default(cuid())
  email      String
  body       String
  userId     String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  sent_by    User     @relation("post", fields: [userId], references: [id])
}


model aichats {
  id      String     @id @default(cuid())
  userId  String
  sent_by User       @relation("ai", fields: [userId], references: [id])
  chat    Json 
   @@unique([id, userId])
}

model agents {
  id         String   @id @default(cuid())
  name       String
  prompt     String
  userId     String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  user       User     @relation("uagent", fields: [userId], references: [id])
}
